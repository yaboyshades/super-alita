repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: requirements-txt-fixer
      - id: mixed-line-ending
        args: [--fix=lf]

  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        args: [--line-length=88]
        language_version: python3

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          - pydantic>=2.0.0
          - redis>=4.0.0
          - types-redis
          - loguru
          - tenacity
        args: [--config-file=pyproject.toml]
        exclude: ^(tests/|scripts/)

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]
        exclude: tests/

  - repo: https://github.com/pycqa/pylint
    rev: v3.0.3
    hooks:
      - id: pylint
        args: [--rcfile=pyproject.toml]
        additional_dependencies:
          - pydantic>=2.0.0
          - redis>=4.0.0
          - loguru
          - tenacity
        exclude: tests/

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, json, markdown]
        exclude: \.md$

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [--tb=short, -q]
        stages: [pre-push]

      - id: security-audit
        name: security-audit
        entry: bash
        language: system
        args: [-c, "pip-audit --desc --format=json || true"]
        pass_filenames: false
        stages: [manual]

      - id: coverage-check
        name: coverage-check
        entry: bash
        language: system
        args: [-c, "pytest --cov=src --cov-fail-under=80 --tb=short || true"]
        pass_filenames: false
        stages: [manual]
