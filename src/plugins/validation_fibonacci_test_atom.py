import asyncio
import logging

from src.core.events import ToolResultEvent

logger = logging.getLogger(__name__)


async def validation_fibonacci_test(
    event_bus=None, tool_call_id="", session_id="", conversation_id="", **kwargs
):
    """
    Test fibonacci implementation for validation

    Auto-generated tool that publishes results via event bus.
    Generated by CREATOR Plugin with guaranteed event contract.
    """
    result = dict()
    success = False

    try:
        # Test fibonacci implementation for validation
        # Fibonacci calculation logic
        n = kwargs.get("n", kwargs.get("number", 10))  # Default to 10 if not specified
        if n <= 0:
            value = 0
        elif n == 1:
            value = 1
        else:
            a, b = 0, 1
            for _ in range(n):
                a, b = b, a + b
            value = a
        result = {"value": value, "n": n, "description": f"fibonacci({n}) = {value}"}
        success = True
        logger.info("validation_fibonacci_test executed successfully")

    except Exception as e:
        logger.exception("validation_fibonacci_test execution failed")
        result = {"error": str(e)}
        success = False

    # Always emit ToolResultEvent if event_bus is available
    if event_bus and hasattr(event_bus, "publish"):
        try:
            tool_result = ToolResultEvent(
                source_plugin="validation_fibonacci_test",
                tool_call_id=tool_call_id,
                session_id=session_id,
                conversation_id=conversation_id,
                success=success,
                result=result,
            )

            # Handle async event publishing
            if asyncio.iscoroutinefunction(event_bus.publish):
                await event_bus.publish(tool_result)
            else:
                # Sync publishing fallback
                event_bus.publish(tool_result)

            logger.debug("validation_fibonacci_test result event published")

        except Exception as e:
            logger.error(
                f"validation_fibonacci_test failed to publish result event: {e!s}"
            )

    return result
