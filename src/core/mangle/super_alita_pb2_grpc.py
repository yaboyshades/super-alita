# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import super_alita_pb2 as super__alita__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in super_alita_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SuperAlitaAgentStub(object):
    """Super Alita Agent gRPC Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetHealth = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/GetHealth',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=super__alita__pb2.HealthResponse.FromString,
                _registered_method=True)
        self.GetStatus = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/GetStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=super__alita__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.ProcessTask = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/ProcessTask',
                request_serializer=super__alita__pb2.TaskRequest.SerializeToString,
                response_deserializer=super__alita__pb2.TaskResponse.FromString,
                _registered_method=True)
        self.GetCortexStatus = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/GetCortexStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=super__alita__pb2.CortexStatusResponse.FromString,
                _registered_method=True)
        self.GetMetrics = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/GetMetrics',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=super__alita__pb2.MetricsResponse.FromString,
                _registered_method=True)
        self.GetEvents = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/GetEvents',
                request_serializer=super__alita__pb2.EventsRequest.SerializeToString,
                response_deserializer=super__alita__pb2.EventsResponse.FromString,
                _registered_method=True)
        self.StreamEvents = channel.unary_stream(
                '/super_alita.SuperAlitaAgent/StreamEvents',
                request_serializer=super__alita__pb2.EventsRequest.SerializeToString,
                response_deserializer=super__alita__pb2.EventStreamResponse.FromString,
                _registered_method=True)
        self.CreateConcept = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/CreateConcept',
                request_serializer=super__alita__pb2.CreateConceptRequest.SerializeToString,
                response_deserializer=super__alita__pb2.CreateConceptResponse.FromString,
                _registered_method=True)
        self.CreateRelationship = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/CreateRelationship',
                request_serializer=super__alita__pb2.CreateRelationshipRequest.SerializeToString,
                response_deserializer=super__alita__pb2.CreateRelationshipResponse.FromString,
                _registered_method=True)
        self.QueryKnowledgeGraph = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/QueryKnowledgeGraph',
                request_serializer=super__alita__pb2.QueryRequest.SerializeToString,
                response_deserializer=super__alita__pb2.QueryResponse.FromString,
                _registered_method=True)
        self.GetKnowledgeGraphStats = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/GetKnowledgeGraphStats',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=super__alita__pb2.KnowledgeGraphStatsResponse.FromString,
                _registered_method=True)
        self.CreatePolicy = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/CreatePolicy',
                request_serializer=super__alita__pb2.CreatePolicyRequest.SerializeToString,
                response_deserializer=super__alita__pb2.CreatePolicyResponse.FromString,
                _registered_method=True)
        self.MakeDecision = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/MakeDecision',
                request_serializer=super__alita__pb2.DecisionRequest.SerializeToString,
                response_deserializer=super__alita__pb2.DecisionResponse.FromString,
                _registered_method=True)
        self.ProvideFeedback = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/ProvideFeedback',
                request_serializer=super__alita__pb2.FeedbackRequest.SerializeToString,
                response_deserializer=super__alita__pb2.FeedbackResponse.FromString,
                _registered_method=True)
        self.GetOptimizationStats = channel.unary_unary(
                '/super_alita.SuperAlitaAgent/GetOptimizationStats',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=super__alita__pb2.OptimizationStatsResponse.FromString,
                _registered_method=True)


class SuperAlitaAgentServicer(object):
    """Super Alita Agent gRPC Service
    """

    def GetHealth(self, request, context):
        """Health and Status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessTask(self, request, context):
        """Cortex Operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCortexStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetrics(self, request, context):
        """Telemetry Operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConcept(self, request, context):
        """Knowledge Graph Operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRelationship(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryKnowledgeGraph(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKnowledgeGraphStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePolicy(self, request, context):
        """Optimization Operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeDecision(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProvideFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOptimizationStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SuperAlitaAgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHealth,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=super__alita__pb2.HealthResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=super__alita__pb2.StatusResponse.SerializeToString,
            ),
            'ProcessTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessTask,
                    request_deserializer=super__alita__pb2.TaskRequest.FromString,
                    response_serializer=super__alita__pb2.TaskResponse.SerializeToString,
            ),
            'GetCortexStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCortexStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=super__alita__pb2.CortexStatusResponse.SerializeToString,
            ),
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=super__alita__pb2.MetricsResponse.SerializeToString,
            ),
            'GetEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvents,
                    request_deserializer=super__alita__pb2.EventsRequest.FromString,
                    response_serializer=super__alita__pb2.EventsResponse.SerializeToString,
            ),
            'StreamEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamEvents,
                    request_deserializer=super__alita__pb2.EventsRequest.FromString,
                    response_serializer=super__alita__pb2.EventStreamResponse.SerializeToString,
            ),
            'CreateConcept': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConcept,
                    request_deserializer=super__alita__pb2.CreateConceptRequest.FromString,
                    response_serializer=super__alita__pb2.CreateConceptResponse.SerializeToString,
            ),
            'CreateRelationship': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRelationship,
                    request_deserializer=super__alita__pb2.CreateRelationshipRequest.FromString,
                    response_serializer=super__alita__pb2.CreateRelationshipResponse.SerializeToString,
            ),
            'QueryKnowledgeGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryKnowledgeGraph,
                    request_deserializer=super__alita__pb2.QueryRequest.FromString,
                    response_serializer=super__alita__pb2.QueryResponse.SerializeToString,
            ),
            'GetKnowledgeGraphStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKnowledgeGraphStats,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=super__alita__pb2.KnowledgeGraphStatsResponse.SerializeToString,
            ),
            'CreatePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePolicy,
                    request_deserializer=super__alita__pb2.CreatePolicyRequest.FromString,
                    response_serializer=super__alita__pb2.CreatePolicyResponse.SerializeToString,
            ),
            'MakeDecision': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeDecision,
                    request_deserializer=super__alita__pb2.DecisionRequest.FromString,
                    response_serializer=super__alita__pb2.DecisionResponse.SerializeToString,
            ),
            'ProvideFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.ProvideFeedback,
                    request_deserializer=super__alita__pb2.FeedbackRequest.FromString,
                    response_serializer=super__alita__pb2.FeedbackResponse.SerializeToString,
            ),
            'GetOptimizationStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOptimizationStats,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=super__alita__pb2.OptimizationStatsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'super_alita.SuperAlitaAgent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('super_alita.SuperAlitaAgent', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SuperAlitaAgent(object):
    """Super Alita Agent gRPC Service
    """

    @staticmethod
    def GetHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/GetHealth',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            super__alita__pb2.HealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/GetStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            super__alita__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/ProcessTask',
            super__alita__pb2.TaskRequest.SerializeToString,
            super__alita__pb2.TaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCortexStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/GetCortexStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            super__alita__pb2.CortexStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/GetMetrics',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            super__alita__pb2.MetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/GetEvents',
            super__alita__pb2.EventsRequest.SerializeToString,
            super__alita__pb2.EventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/super_alita.SuperAlitaAgent/StreamEvents',
            super__alita__pb2.EventsRequest.SerializeToString,
            super__alita__pb2.EventStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateConcept(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/CreateConcept',
            super__alita__pb2.CreateConceptRequest.SerializeToString,
            super__alita__pb2.CreateConceptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRelationship(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/CreateRelationship',
            super__alita__pb2.CreateRelationshipRequest.SerializeToString,
            super__alita__pb2.CreateRelationshipResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryKnowledgeGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/QueryKnowledgeGraph',
            super__alita__pb2.QueryRequest.SerializeToString,
            super__alita__pb2.QueryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetKnowledgeGraphStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/GetKnowledgeGraphStats',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            super__alita__pb2.KnowledgeGraphStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/CreatePolicy',
            super__alita__pb2.CreatePolicyRequest.SerializeToString,
            super__alita__pb2.CreatePolicyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MakeDecision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/MakeDecision',
            super__alita__pb2.DecisionRequest.SerializeToString,
            super__alita__pb2.DecisionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProvideFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/ProvideFeedback',
            super__alita__pb2.FeedbackRequest.SerializeToString,
            super__alita__pb2.FeedbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOptimizationStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/super_alita.SuperAlitaAgent/GetOptimizationStats',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            super__alita__pb2.OptimizationStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
